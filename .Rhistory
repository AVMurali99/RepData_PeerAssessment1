q()
getwd()
getwd()
getwd()
swirl()
library(swirl)
swirl()
num_vect<-c(0.5, 55, -10, 6)
tf <- num_vect < 1
tf
num_vect >=6
my_char <- c("My", "name", "is")
my_char
paste(my_char, collapse = " ")
my_name <- c(my_char, "Murali")
my_name
paste(my_name, collapse = " ")
paste("Hello", "world!", sep = " ")
paste(c(1:3), c("X", "Y", "Z"), sep = "")
paste(LETTERS, 1:4, sep = "-")
x <- c(44, NA, 5, NA)
x*3
y<- rnorm(1000)
z<- rep(NA, 1000)
my_data <- sample(c(y,z), 100)
my_na <- is.na(my_data)
my_na
my_data == NA
sum(my_na)
my_data
0/0
Inf - Inf
x
x[1:10]
x[is.na(x)]
y <- x[!is.na(x)]
y
y[y>0]
x[x>0]
x[!is.na(x) & x>0]
c(x[3],x[5],x[7])
x[c(3,5,7)]
x[0]
x[3000]
x[c(-2, -10)]
x[-c(2, 10)]
vect <- c(foo = 11, bar = 2, norf = NA)
vect
names(vect)
vect2 <- c(11, 2, NA)
names(vect2) <- c("foo", "bar", "norf")
identical(vect, vect2)
vect["bar"]
vect[c("foo", "bar")]
my_vector <- C(1:20)
my_vector <- C(1:20)
my_vector <- C(20, 1:20)
my_vector <- C(1:20, 20)
my_vector <- c(1:20)
my_vector <- 1:20
my_vector
dim(my_vector)
length(my_vector)
dim(my_vector) <- c(4, 5)
dim(my_vector)
attributes(my_vector)
my_vector
class(my_vector)
my_matrix <- my_vector
?matrix
my_matrix2 <- matrix(1:20,4,5)
identical(my_matrix, my_matrix2)
patients <- c("Bill", "Gina", "Kelly", "Sean")
cbind(patients, my_matrix)
my_data <- data.frame(patients, my_matrix)
my_data
class(my_data)
cnames <- c("patient", "age", "weight", "bp", "rating", "test")
colnames(my_data) <- cnames
my_data
TRUE ==TRUE
(FALSE == TRUE) == FALSE
6==7
6 < 7
10 <= 10
5 !=7
!(5 == 7)
!5 == 7
FALSE & FALSE
TRUE & c(TRUE, FALSE, FALSE)
TRUE && c(TRUE, FALSE, FALSE)
TRUE | c(TRUE, FALSE, FALSE)
TRUE || c(TRUE, FALSE, FALSE)
5 > 8 || 6 != 8 && 4 > 3.9
isTRUE(6 > 4)
identical('twins', 'twins')
xor(5 == 6, !FALSE)
ints <- sample(10)
ints
ints>5
which(ints >7)
any(ints<0)
all(ints>0)
library(swirl)
swirl()
q()
library(swirl)
swirl()
head(flags)
dim(flags)
class(flags)
cls_list <- lapply(flags, class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect <- sapply(flags, class)
class(cls_vect)
sum(flags$orange)
flag_colors <- flags[,11:17]
head(flag_colors)
lapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, sum)
sapply(flag_colors, mean)
flag_shapes <- flags[,19:23]
lapply(flag_shapes, range)
shape_mat <- sapply(flag_shapes, range)
shape_mat
class(shape_mat)
unique(c(3, 4, 5, 5, 5, 6, 6))
unique_vals <- lapply(flags, unique)
unique_vals
lapply(unique_vals, length)
sapply(unique_vals, length)
sapply(flags, unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags, unique)
vapply(flags, unique, numeric(1))
ok()
sapply(flags, class)
vapply(flags, class, character(1))
?tapply
table(flags$landmass)
table(flags$animate)
tapply(flags$animate, flags$landmass, mean)
tapply(flags$population, flags$red, summary)
tapply(flags$population, flags$landmass, summary)
ls()
class(plants)
dim(plants)
nrow(plants)
ncol(plants)
object.size(plants)
names(plants)
head(plants)
head(plants, 10)
tail(plants, 15)
summary(plants)
table(plants$Active_Growth_Period)
str(plants)
?sample
sample(1:6, 4, replace = TRUE)
sample(1:6, 4, replace = TRUE)
sample(1:20, 10)
letters
LETTERS
sample(LETTERS)
flips <- sample(c(0,1), 100, replace = TRUE, prob = c(0.3, 0.7))
flips
sum(flips)
?rbinom
rbinom(1, size = 100, prob = 0.7)
flips2 <- rbinom(100, size = 1, prob = 0.7)
flips2
sum(flips2)
?rnoem
?rnorm
rnorm(10)
rnorm(10, 100, 25)
rpois(5, 10)
replicate(100, rpois(5.10))
replicate(100, rpois(5,10))
my_pois <- replicate(100, rpois(5,10))
my_pois
cm <- sapply(my_pois, colmeans)
cm <- sapply(my_pois, colMeans)
class(my_pois)
cm<-colMeans(my_pois)
hist(cm)
swirl()
getwd()
library(swirl)
install_from_swirl("Open Intro")
swirl(0)
y<-100
cars$type
sqrt(y)
z<-sqrt(y)
?sqrt
cars
10
range(cars$price)
sum(cars$price)
sum(cars$price)/54
mean(cars$price)
mpg.midsize
sort(mpg.midsize)
mpg.sorted <- sort(mpg.midsize)
19
median(mpg.midsize)
summary(cars$mpgCity)
25
mode(cars$mpgCity)
16.9
16
9
1
169
?stem
stem(cars$mpgCity)
16.9
?mode
19
15
17
sd(mpg.midsize)
sd(mpg.midsize)^2
24
q(0)
q()
library(data.table)
data <- read.csv("activity.csv")
setwd("C:/Users/ASHA/Desktop/Coursera")
data <- read.csv("activity.csv")
setwd("C:/Users/ASHA/Desktop/Coursera/RepData_PeerAssessment1")
data <- read.csv("activity.csv")
data <- data.table(data)
datatable[,date:= as.Date(date, format = "%m/%d/%Y")]
data[,date:= as.Date(date, format = "%m/%d/%Y")]
avgstepsPerInt <- data[, mean(steps), by = interval]
setattr(avgstepsPerInt, 'names', c("interval", "AvgSteps"))
plot(avgstepsPerInt$interval, avgstepsPerInt$AvgSteps)
avgstepsPerInt <- data[, mean(steps, na.rm = TRUE), by = interval]
setattr(avgstepsPerInt, 'names', c("interval", "AvgSteps"))
plot(avgstepsPerInt$interval, avgstepsPerInt$AvgSteps)
table(data$steps)
missing <- data[,is.na(steps)]
sum(missing)
sum(!missing)
15264+2304
17568/288
17568|288
17568%%288
data[1,steps]
data[100,steps]
data[500,steps]
data[5000,steps]
data[6200,steps]
1%%288
for (i in 1:17568) {
if missing[i] {
if ((i %% 288) == 0) {
data[i,steps] = avgstepsPerInt[288, AvgSteps]
}
else (data[i,steps] = avgstepsPerInt[(i%%288), AvgSteps])
}
}
for (i in 1:17568) {
if (missing[i]) {
if ((i %% 288) == 0) {
data[i,steps] = avgstepsPerInt[288, AvgSteps]
}
else (data[i,steps] = avgstepsPerInt[(i%%288), AvgSteps])
}
}
data[6200,1]
data[6200,steps]
data[6200,1, with = FALSE]
newData <- data.frame(data)
str(newData)
newData[1,steps]
newData[1,newData$steps]
names(newData)
newData[1,$steps]
newData[1,"steps"]
weekdays(2012-10-1)
data[, weekday := weekdays(date)]
wday(2012-10-1)
wday("2012-10-1")
wday("2014-12-14")
weekdays(2014-12-14)
weekdays("2014-12-14")
head(data)
data[, dayType := factor(ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))]
str(data)
data[, weekday := NULL]
str(data)
library(lattice)
xyplot(data$steps~data$interval|dayType)
xyplot(data$steps~data$interval|data$dayType)
xyplot(data$steps~data$interval|data$dayType, layout = c(2,0))
xyplot(data$steps~data$interval|data$dayType, layout = c(2,1))
xyplot(data$steps~data$interval|data$dayType, type = "l", layout = c(2,1))
xyplot(data$steps~data$interval|data$dayType, type = "l", layout = c(1,2))
newData[, dayType := factor(ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))]
class(newData)
newData <- data.table(newData)
newData[, dayType := factor(ifelse(wday(date) %in% c(1,7), "weekend", "weekday"))]
newData[, AvgSteps:= mean(steps, na,rm = TRUE), by = .(interval, dayType)]
newData[, AvgSteps:= mean(steps, na.rm = TRUE), by = .(interval, dayType)]
head(newData)
newData[, AvgSteps, by = .(interval, dayType)]
newData[, AvgSteps:= mean(steps, na.rm = TRUE), by = .(dayType, interval)]
head(newData)
newData[, AvgSteps, by = dayType]
newData[, AvgSteps:= mean(steps, na.rm = TRUE), by = dayType]
newData[, AvgStepsinterval:= mean(AvgSteps, na.rm = TRUE), by = interval]
head(newData)
